# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, FIBLAB
# This file is distributed under the same license as the AgentSociety
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AgentSociety 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-05 00:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:1
#, python-brace-format
msgid "{py:mod}`agentsociety.agent.context`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:10
msgid "Module Contents"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:12
msgid "Classes"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:18
#, python-brace-format
msgid "{py:obj}`AgentContext <agentsociety.agent.context.AgentContext>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:20
#: ../../../packages/agentsociety/agentsociety/agent/context.py:61
msgid "Agent Context"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:22
#, python-brace-format
msgid "{py:obj}`BlockContext <agentsociety.agent.context.BlockContext>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:24
#: ../../../packages/agentsociety/agentsociety/agent/context.py:77
msgid "Block Context"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:26
#, python-brace-format
msgid "{py:obj}`DotDict <agentsociety.agent.context.DotDict>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:28
#: ../../../packages/agentsociety/agentsociety/agent/context.py:93
msgid "A dictionary that supports dot notation access to its items."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:32
msgid "Functions"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:38
#, python-brace-format
msgid ""
"{py:obj}`context_to_dot_dict "
"<agentsociety.agent.context.context_to_dot_dict>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:40
#: ../../../packages/agentsociety/agentsociety/agent/context.py:148
msgid "Converts an AgentContext to a DotDict for dot notation access."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:42
#, python-brace-format
msgid ""
"{py:obj}`auto_deepcopy_dotdict "
"<agentsociety.agent.context.auto_deepcopy_dotdict>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:44
#: ../../../packages/agentsociety/agentsociety/agent/context.py:155
msgid "Decorator that automatically deep copies DotDict arguments."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:46
#, python-brace-format
msgid ""
"{py:obj}`apply_auto_deepcopy_to_module "
"<agentsociety.agent.context.apply_auto_deepcopy_to_module>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:48
#: ../../../packages/agentsociety/agentsociety/agent/context.py:162
msgid "Applies the auto_deepcopy_dotdict decorator to all functions in a module."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:52
msgid "API"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:58
#: ../../apidocs/agentsociety/agentsociety.agent.context.md:74
#, python-brace-format
msgid "Bases: {py:obj}`pydantic.BaseModel`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:63
#: ../../apidocs/agentsociety/agentsociety.agent.context.md:79
#: ../../apidocs/agentsociety/agentsociety.agent.context.md:95
msgid "Initialization"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:67
#: ../../../packages/agentsociety/agentsociety/agent/context.py:83
msgid ""
"Create a new model by parsing and validating input data from keyword "
"arguments."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:69
#: ../../../packages/agentsociety/agentsociety/agent/context.py:85
msgid ""
"Raises [`ValidationError`][pydantic_core.ValidationError] if the input "
"data cannot be validated to form a valid model."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:72
#: ../../../packages/agentsociety/agentsociety/agent/context.py:88
msgid "`self` is explicitly positional-only to allow `self` as a field name."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:90
#, python-brace-format
msgid "Bases: {py:obj}`dict`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:95
#: ../../../packages/agentsociety/agentsociety/agent/context.py:126
#: ../../../packages/agentsociety/agentsociety/agent/context.py:134
#: ../../../packages/agentsociety/agentsociety/agent/context.py:142
#: ../../../packages/agentsociety/agentsociety/agent/context.py:150
#: ../../../packages/agentsociety/agentsociety/agent/context.py:157
#: ../../../packages/agentsociety/agentsociety/agent/context.py:164
msgid "**Description**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:96
msgid "Extends the standard dictionary to allow attribute-style access"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:97
#, python-brace-format
msgid "Example: d = DotDict({'foo': 'bar'}); d.foo == 'bar'"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:98
msgid "Supports merging with other DotDict instances"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:99
msgid "Maintains reference to original dictionaries when merged"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:101
#: ../../../packages/agentsociety/agentsociety/agent/context.py:131
#: ../../../packages/agentsociety/agentsociety/agent/context.py:138
#: ../../../packages/agentsociety/agentsociety/agent/context.py:146
#: ../../../packages/agentsociety/agentsociety/agent/context.py:154
#: ../../../packages/agentsociety/agentsociety/agent/context.py:161
#: ../../../packages/agentsociety/agentsociety/agent/context.py:168
msgid "**Args**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:102
msgid "Same as dict constructor"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:104
#: ../../../packages/agentsociety/agentsociety/agent/context.py:134
#: ../../../packages/agentsociety/agentsociety/agent/context.py:141
#: ../../../packages/agentsociety/agentsociety/agent/context.py:149
#: ../../../packages/agentsociety/agentsociety/agent/context.py:157
#: ../../../packages/agentsociety/agentsociety/agent/context.py:164
#: ../../../packages/agentsociety/agentsociety/agent/context.py:171
msgid "**Returns**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:105
msgid "A dictionary with attribute-style access"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.context.md:99
msgid "Initialize self.  See help(type(self)) for accurate signature."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:124
msgid "Merges another DotDict into this one."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:127
msgid "Merges another DotDict into this one"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:128
msgid "Maintains references to original dictionaries"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:129
msgid "Updates are synchronized with original dictionaries"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:132
#: ../../../packages/agentsociety/agentsociety/agent/context.py:139
#: ../../../packages/agentsociety/agentsociety/agent/context.py:147
msgid "`other` (DotDict): The DotDict to merge with"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:135
msgid "`self` (DotDict): The merged DotDict"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:132
msgid "Implements the | operator for merging DotDicts."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:135
msgid "Allows using the | operator to merge DotDicts"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:136
msgid "Example: c = a | b"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:142
msgid "`DotDict`: A new merged DotDict"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:140
msgid "Implements the |= operator for in-place merging."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:143
msgid "Allows using the |= operator for in-place merging"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:144
msgid "Example: a |= b"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:150
msgid "`self` (DotDict): The updated DotDict"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:151
msgid ""
"Converts a Pydantic AgentContext model to a dictionary with dot notation "
"access"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:152
msgid "Preserves nested structure while enabling attribute-style access"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:155
msgid "`context` (AgentContext): The AgentContext to convert"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:158
msgid "`dot_dict` (DotDict): A dictionary that supports attribute-style access"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:158
msgid "Wraps a function to automatically deep copy any DotDict arguments"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:159
msgid "Prevents modifications to DotDict arguments from affecting the original"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:162
msgid "`func` (callable): The function to decorate"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:165
msgid "`wrapper` (callable): The decorated function"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:165
msgid "Scans a module for functions and applies the decorator to each"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:166
msgid ""
"Makes all functions in the module automatically deep copy DotDict "
"arguments"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:169
msgid "`module` (module): The module to process"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/context.py:172
msgid "None"
msgstr ""

