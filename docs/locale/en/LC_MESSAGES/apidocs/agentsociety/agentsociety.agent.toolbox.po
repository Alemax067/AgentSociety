# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, FIBLAB
# This file is distributed under the same license as the AgentSociety
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AgentSociety 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-05 00:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:1
#, python-brace-format
msgid "{py:mod}`agentsociety.agent.toolbox`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:7
msgid "Enhanced AgentToolbox with support for custom tools."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:9
msgid ""
"This module provides an extensible AgentToolbox that allows users to add "
"custom tools while maintaining backward compatibility with the existing "
"API."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:10
msgid "Module Contents"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:12
msgid "Classes"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:18
#, python-brace-format
msgid "{py:obj}`CustomTool <agentsociety.agent.toolbox.CustomTool>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:20
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:59
msgid "Represents a custom tool that can be added to AgentToolbox."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:22
#, python-brace-format
msgid "{py:obj}`AgentToolbox <agentsociety.agent.toolbox.AgentToolbox>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:24
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:168
msgid "Enhanced toolbox for agents with support for custom tools."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:28
msgid "Data"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:34
#, python-brace-format
msgid "{py:obj}`__all__ <agentsociety.agent.toolbox.__all__>`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:40
msgid "API"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:46
msgid "['AgentToolbox', 'CustomTool']"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:56
#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:165
#, python-brace-format
msgid "Bases: {py:obj}`pydantic.BaseModel`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:61
msgid ""
"**Description**:   A Pydantic model for custom tools that provides "
"metadata and access methods.   The underlying tool can be any callable "
"object (function, method, class, etc.)."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:65
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:130
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:153
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:162
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:175
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:271
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:278
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:286
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:294
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:302
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:318
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:334
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:343
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:350
msgid "**Args**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:66
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:154
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:163
msgid "`name` (str): Unique name for the tool"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:67
msgid ""
"`tool` (Any): The actual tool object (can be function, class, method, "
"etc.)"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:68
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:156
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:165
msgid "`description` (str): Description of what the tool does"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:69
msgid "`category` (ToolCategory): Category of the tool (MCP or NORMAL)"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:70
msgid "`metadata` (Dict[str, Any]): Additional metadata about the tool"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:61
#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:170
msgid "Initialization"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:65
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:174
msgid ""
"Create a new model by parsing and validating input data from keyword "
"arguments."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:67
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:176
msgid ""
"Raises [`ValidationError`][pydantic_core.ValidationError] if the input "
"data cannot be validated to form a valid model."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:70
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:179
msgid "`self` is explicitly positional-only to allow `self` as a field name."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:72
#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:83
#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:94
#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:181
#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:192
#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:203
#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:214
#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:225
#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:236
msgid "'Field(...)'"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:105
msgid "Pydantic configuration for CustomTool."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:111
#: ../../apidocs/agentsociety/agentsociety.agent.toolbox.md:253
msgid "True"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:123
msgid "Call the underlying tool."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:125
msgid ""
"**Description**:   Delegates the call to the underlying tool object.   If"
" the tool is callable, it calls it directly.   If the tool is a class, it"
" returns the class for instantiation."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:131
msgid "`*args`: Positional arguments to pass to the tool"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:132
msgid "`**kwargs`: Keyword arguments to pass to the tool"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:134
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:136
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:144
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:159
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:168
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:289
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:297
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:305
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:310
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:321
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:326
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:337
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:346
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:353
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:358
msgid "**Returns**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:135
msgid "`Any`: Result from the tool execution"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:131
msgid "Get information about the tool."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:133
msgid ""
"**Description**:   Returns metadata about the tool for documentation and "
"introspection."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:137
msgid "`Dict[str, Any]`: Tool information dictionary"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:139
msgid "Get the underlying tool object."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:141
msgid "**Description**:   Returns the actual tool object for direct access."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:145
msgid "`Any`: The underlying tool object"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:148
msgid "Create an MCP category tool."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:150
msgid "**Description**:   Convenience method to create a tool with MCP category."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:155
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:164
msgid "`tool` (Any): The actual tool object"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:157
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:166
msgid "`metadata` (Optional[Dict[str, Any]]): Additional metadata"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:160
msgid "`CustomTool`: The created MCP tool"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:157
msgid "Create a NORMAL category tool."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:159
msgid ""
"**Description**:   Convenience method to create a tool with NORMAL "
"category."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:169
msgid "`CustomTool`: The created NORMAL tool"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:170
msgid ""
"**Description**:   An extensible toolbox that provides core agent "
"functionality and allows   users to add custom tools. Maintains backward "
"compatibility with the   original NamedTuple-based implementation."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:176
msgid "`llm` (LLM): Language model interface"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:177
msgid "`environment` (Environment): Simulation environment"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:178
msgid "`messager` (Messager): Message handling system"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:179
msgid "`embedding` (SparseTextEmbedding): Text embedding system"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:180
msgid "`database_writer` (Optional[DatabaseWriter]): Database writing interface"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:247
msgid "Pydantic configuration for AgentToolbox."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:265
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:273
msgid "Add a custom tool to the toolbox."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:267
msgid ""
"**Description**:   Registers a custom tool with the toolbox. The tool "
"will be accessible   via the toolbox instance."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:272
msgid "`tool` (CustomTool): The custom tool to add"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:274
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:349
msgid "**Raises**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:275
msgid "`ValueError`: If a tool with the same name already exists"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:275
msgid "**Description**:   Adds a CustomTool object directly to the toolbox."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:279
msgid "`tool` (CustomTool): The custom tool object to add"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:281
msgid "Get a custom tool by name."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:283
msgid "**Description**:   Retrieves a custom tool from the toolbox."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:287
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:295
msgid "`name` (str): Name of the tool to retrieve"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:290
msgid "`Optional[CustomTool]`: The tool if found, None otherwise"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:289
msgid "Get the underlying tool object by name."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:291
msgid "**Description**:   Retrieves the actual tool object from the toolbox."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:298
msgid "`Optional[Any]`: The tool object if found, None otherwise"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:297
msgid "Remove a custom tool from the toolbox."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:299
msgid "**Description**:   Removes a custom tool from the toolbox."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:303
msgid "`name` (str): Name of the tool to remove"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:306
msgid "`bool`: True if tool was removed, False if not found"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:305
msgid "List all custom tools."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:307
msgid "**Description**:   Returns a dictionary of custom tools."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:311
msgid "`Dict[str, CustomTool]`: Dictionary of tools"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:313
msgid "Get information about a custom tool."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:315
msgid "**Description**:   Returns metadata about a specific custom tool."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:319
msgid "`name` (str): Name of the tool"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:322
msgid "`Optional[Dict[str, Any]]`: Tool information if found"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:321
msgid "Get information about all custom tools."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:323
msgid "**Description**:   Returns metadata about all custom tools in the toolbox."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:327
msgid "`Dict[str, Dict[str, Any]]`: Dictionary of tool information"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:329
msgid "Check if a custom tool exists."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:331
msgid ""
"**Description**:   Checks whether a custom tool with the given name "
"exists."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:335
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:351
msgid "`name` (str): Name of the tool to check"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:338
#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:354
msgid "`bool`: True if tool exists, False otherwise"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:337
msgid "Allow direct access to custom tools as attributes."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:339
msgid ""
"**Description**:   Enables accessing custom tools as attributes of the "
"toolbox.   Returns the underlying tool object."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:344
msgid "`name` (str): Name of the attribute/tool"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:347
msgid "`Any`: The tool object"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:350
msgid "`AttributeError`: If the tool doesn't exist"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:345
msgid "Check if a tool exists in the toolbox."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:347
msgid ""
"**Description**:   Enables using 'in' operator to check for tool "
"existence."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:353
msgid "Get the number of custom tools."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:355
msgid "**Description**:   Returns the number of custom tools in the toolbox."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/toolbox.py:359
msgid "`int`: Number of custom tools"
msgstr ""

