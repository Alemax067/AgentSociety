# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, FIBLAB
# This file is distributed under the same license as the AgentSociety
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AgentSociety 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-05 00:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:1
#, python-brace-format
msgid "{py:mod}`agentsociety.cityagent.blocks.cognition_block`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:10
msgid "Module Contents"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:12
msgid "Classes"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:18
#, python-brace-format
msgid ""
"{py:obj}`CognitionBlockParams "
"<agentsociety.cityagent.blocks.cognition_block.CognitionBlockParams>`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:20
#, python-brace-format
msgid ""
"{py:obj}`CognitionBlock "
"<agentsociety.cityagent.blocks.cognition_block.CognitionBlock>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:22
#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:94
msgid ""
"A cognitive processing block handling daily updates of attitudes, "
"thoughts, and emotions."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:26
msgid "Functions"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:32
#, python-brace-format
msgid ""
"{py:obj}`extract_json "
"<agentsociety.cityagent.blocks.cognition_block.extract_json>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:34
#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:66
msgid "Extract JSON substring from a raw string response."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:38
msgid "Data"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:44
#, python-brace-format
msgid "{py:obj}`__all__ <agentsociety.cityagent.blocks.cognition_block.__all__>`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:50
msgid "API"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:56
msgid "['CognitionBlock']"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:68
msgid "Args:     output_str: Raw string output that may contain JSON data."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:71
msgid "Returns:     Extracted JSON string if valid, otherwise None."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:74
#, python-brace-format
msgid ""
"Note:     Searches for the first '{' and last '}' to isolate JSON "
"content.     Catches JSON decoding errors and logs warnings."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:73
#, python-brace-format
msgid "Bases: {py:obj}`agentsociety.agent.BlockParams`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:80
msgid "'Field(...)'"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:91
#, python-brace-format
msgid "Bases: {py:obj}`agentsociety.agent.Block`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:96
msgid ""
"Attributes:     configurable_fields: List of configurable parameters "
"(top_k).     default_values: Default values for configurable parameters."
"     fields_description: Metadata descriptions for configurable "
"parameters.     top_k: Number of most relevant memories retrieved for "
"processing.     last_check_time: Timestamp tracker for daily update "
"cycles."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:96
msgid "Initialization"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:100
msgid "Initialize CognitionBlock with dependencies."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:102
msgid ""
"Args:     llm: Language Model interface for cognitive processing.     "
"environment: Environment for time-based operations.     memory: Memory "
"system to store/retrieve agent status and experiences."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:106
#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:136
msgid "None"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:116
msgid "'CognitionBlock'"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.cityagent.blocks.cognition_block.md:126
msgid "'Handles daily updates of attitudes, thoughts, and emotions'"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:148
msgid "Update multiple status fields in memory."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:150
msgid "Args:     status: Dictionary of key-value pairs to update."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:157
msgid ""
"Update agent's attitudes toward specific topics based on daily "
"experiences."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:159
#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:168
msgid "Workflow:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:160
msgid "Fetch agent's profile and current emotional state from memory."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:161
msgid "Retrieve relevant incidents using topic-based memory search."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:162
msgid ""
"Construct a structured prompt combining profile, incidents, and previous "
"attitude."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:163
msgid "Query LLM to generate updated attitude scores (0-10 scale)."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:164
#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:173
msgid "Retry up to 10 times on LLM failures."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:165
msgid "Persist updated attitudes to memory."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:167
#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:179
msgid "Raises:     Exception: If all LLM retries fail."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:166
msgid "Generate daily reflections based on experiences and emotional state."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:169
msgid "Build profile and emotion context from memory."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:170
msgid "Retrieve today's incidents."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:171
msgid "Construct a reflection prompt."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:172
msgid "Query LLM to generate thought summary and emotional keyword."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:174
msgid "Update memory with new thought and log cognition."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:176
msgid "Returns:     Generated thought string."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:175
msgid "Check if a new day has started in the simulation environment."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:177
msgid "Returns:     True if a new day is detected, False otherwise."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:184
msgid "Main daily cognitive update entry point."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:186
msgid ""
"Triggers:     - thought_update()     - attitude_update() Only executes "
"when cross_day() detects a new day."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:193
msgid "Update emotion intensities based on a specific incident."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:195
msgid "Args:     incident: Description of the triggering event."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:198
msgid "Returns:     Natural language conclusion about emotional state."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:201
msgid "Raises:     Exception: If LLM requests fail after 10 retries."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/cityagent/blocks/cognition_block.py:204
msgid ""
"Workflow:     1. Build emotion context from current state     2. "
"Incorporate incident details into prompt     3. Query LLM for updated "
"emotion scores and summary     4. Update memory with new emotional state"
msgstr ""

