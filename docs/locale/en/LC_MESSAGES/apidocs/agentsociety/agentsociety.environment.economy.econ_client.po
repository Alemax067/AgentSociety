# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, FIBLAB
# This file is distributed under the same license as the AgentSociety
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AgentSociety 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-05 00:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:1
#, python-brace-format
msgid "{py:mod}`agentsociety.environment.economy.econ_client`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:10
msgid "Module Contents"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:12
msgid "Classes"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:18
#, python-brace-format
msgid ""
"{py:obj}`EconomyEntityType "
"<agentsociety.environment.economy.econ_client.EconomyEntityType>`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:20
#, python-brace-format
msgid ""
"{py:obj}`EconomyClient "
"<agentsociety.environment.economy.econ_client.EconomyClient>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:22
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:141
msgid "Client side of Economy service."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:26
msgid "Functions"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:32
#, python-brace-format
msgid ""
"{py:obj}`_create_aio_channel "
"<agentsociety.environment.economy.econ_client._create_aio_channel>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:34
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:133
msgid "Create a gRPC asynchronous channel."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:38
msgid "Data"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:44
#, python-brace-format
msgid "{py:obj}`__all__ <agentsociety.environment.economy.econ_client.__all__>`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:50
msgid "API"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:56
msgid "['EconomyClient']"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:66
#, python-brace-format
msgid "Bases: {py:obj}`int`, {py:obj}`enum.Enum`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:72
msgid "0"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:82
msgid "1"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:92
msgid "2"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:102
msgid "3"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:112
msgid "4"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:122
msgid "5"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:135
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:149
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:214
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:223
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:232
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:241
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:250
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:259
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:276
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:285
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:294
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:303
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:312
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:330
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:339
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:348
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:357
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:366
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:375
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:384
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:393
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:438
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:447
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:456
msgid "**Args**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:136
msgid "`server_address` (`str`): The address of the server to connect to."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:137
msgid ""
"`secure` (`bool`, optional): Whether to use a secure connection. Defaults"
" to `False`."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:139
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:217
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:226
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:235
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:244
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:253
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:263
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:282
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:289
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:298
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:309
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:318
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:334
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:387
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:396
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:402
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:411
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:420
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:429
msgid "**Returns**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:140
msgid "`grpc.aio.Channel`: A gRPC asynchronous channel for making RPC calls."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:142
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:301
msgid "**Raises**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:143
msgid ""
"`ValueError`: If a secure channel is requested but the server address "
"starts with `http://`."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:143
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:145
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:156
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:292
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:304
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:448
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:466
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:467
msgid "**Description**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:146
msgid ""
"This function creates and returns a gRPC asynchronous channel based on "
"the provided server address and security flag."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:147
msgid ""
"It ensures that if `secure=True`, then the server address does not start "
"with `http://`."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:148
msgid ""
"If the server address starts with `https://`, it will automatically "
"switch to a secure connection even if `secure=False`."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:144
msgid ""
"This class serves as a client interface to interact with the Economy "
"Simulator via gRPC."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:145
msgid ""
"It establishes an asynchronous connection and provides methods to "
"communicate with the service."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.environment.economy.econ_client.md:143
msgid "Initialization"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:147
msgid "Initialize the EconomyClient."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:150
msgid "`server_address` (`str`): The address of the Economy server to connect to."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:152
msgid "**Attributes**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:153
msgid "`server_address` (`str`): The address of the Economy server."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:154
msgid ""
"`_aio_stub` (`OrgServiceStub`): A gRPC stub used to make remote calls to "
"the Economy service."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:157
msgid ""
"Initializes the EconomyClient with the specified server address and "
"security preference."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:158
msgid "Creates an asynchronous gRPC channel using `_create_aio_channel`."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:159
msgid ""
"Instantiates a gRPC stub (`_aio_stub`) for interacting with the Economy "
"service."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:170
msgid ""
"Copy the object's state from self.__dict__ which contains all our "
"instance attributes. Always use the dict.copy() method to avoid modifying"
" the original state."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:178
msgid ""
"Restore instance attributes (i.e., filename and mode) from the unpickled "
"state dictionary."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:195
msgid "Get the ids of agents and orgs"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:203
msgid "Set the ids of agents and orgs"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:212
msgid "Get agent by id"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:215
msgid "`id` (`Union[list[int], int]`): The id of the agent."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:218
msgid "`economyv2.Agent`: The agent object."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:221
msgid "Get bank by id"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:224
msgid "`id` (`Union[list[int], int]`): The id of the bank."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:227
msgid "`economyv2.Bank`: The bank object."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:230
msgid "Get firm by id"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:233
msgid "`id` (`Union[list[int], int]`): The id of the firm."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:236
msgid "`economyv2.Firm`: The firm object."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:239
msgid "Get government by id"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:242
msgid "`id` (`Union[list[int], int]`): The id of the government."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:245
msgid "`economyv2.Government`: The government object."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:248
msgid "Get nbs by id"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:251
msgid "`id` (`Union[list[int], int]`): The id of the nbs."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:254
msgid "`economyv2.Nbs`: The nbs object."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:257
msgid "Get specific value"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:260
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:277
msgid "`id` (`Union[list[int], int]`): The id of `Org` or `Agent`."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:261
msgid "`key` (`str`): The attribute to fetch."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:264
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:283
msgid "Any"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:274
msgid "Update key-value pair"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:278
msgid "`key` (`str`): The attribute to update."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:279
msgid "`value` (`Union[Any, list[Any]]`): The value to update."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:280
msgid ""
"`mode` (Union[Literal[\"replace\"], Literal[\"merge\"]], optional): "
"Update mode. Defaults to \"replace\"."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:283
msgid "Add one or more agents to the economy system."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:286
msgid ""
"`configs` (`Union[list[dict], dict]`): A single configuration dictionary "
"or a list of dictionaries, each containing the necessary information to "
"create an agent (e.g., id, currency)."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:290
msgid ""
"The method does not explicitly return any value but gathers the responses"
" from adding each agent."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:293
msgid ""
"If a single configuration dictionary is provided, it is converted into a "
"list."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:294
msgid ""
"For each configuration in the list, a task is created to asynchronously "
"add an agent using the provided configuration."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:295
msgid ""
"All tasks are executed concurrently, and their results are gathered and "
"returned."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:292
msgid "Add one or more organizations to the economy system."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:295
msgid ""
"`configs` (`Union[List[Dict], Dict]`): A single configuration dictionary "
"or a list of dictionaries, each containing the necessary information to "
"create an organization (e.g., id, type, nominal_gdp, etc.)."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:299
msgid "`List`: A list of responses from adding each organization."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:302
msgid "`KeyError`: If a required field is missing from the config dictionary."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:305
msgid "Ensures `configs` is always a list, even if only one config is provided."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:306
msgid ""
"For each configuration in the list, creates a task to asynchronously add "
"an organization using the provided configuration."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:307
msgid "Executes all tasks concurrently and gathers their results."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:301
msgid "Calculate the taxes due for agents based on their incomes."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:304
msgid "`org_id` (`int`): The ID of the government organization."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:305
msgid ""
"`agent_ids` (`List[int]`): A list of IDs for the agents whose taxes are "
"being calculated."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:306
msgid ""
"`incomes` (`List[float]`): A list of income values corresponding to each "
"agent."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:307
msgid ""
"`enable_redistribution` (`bool`): Flag indicating whether redistribution "
"is enabled."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:310
msgid ""
"`Tuple[float, List[float]]`: A tuple containing the total taxes due and "
"updated incomes after tax calculation."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:310
msgid "Calculate consumption for agents based on their demands."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:313
msgid ""
"`org_ids` (`Union[int, list[int]]`): The ID of the firm providing goods "
"or services."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:314
msgid ""
"`agent_id` (`int`): The ID of the agent whose consumption is being "
"calculated."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:315
msgid ""
"`demands` (`List[int]`): A list of demand quantities corresponding to "
"each agent."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:316
msgid "`consumption_accumulation` (`bool`): Weather accumulation."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:319
msgid ""
"`Tuple[int, List[float]]`: A tuple containing the remaining inventory and"
" updated currencies for each agent."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:328
msgid "Calculate interest for agents based on their accounts."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:331
msgid "`bank_id` (`int`): The ID of the bank."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:332
msgid ""
"`agent_ids` (`List[int]`): A list of IDs for the agents whose interests "
"are being calculated."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:335
msgid ""
"`Tuple[float, List[float]]`: A tuple containing the total interest and "
"updated currencies for each agent."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:337
msgid "Remove one or more agents from the system."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:340
msgid ""
"`org_ids` (`Union[int, List[int]]`): A single ID or a list of IDs for the"
" agents to be removed."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:346
msgid "Remove one or more banks from the system."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:349
msgid ""
"`bank_ids` (`Union[int, List[int]]`): A single ID or a list of IDs for "
"the banks to be removed."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:355
msgid "Remove one or more firms from the system."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:358
msgid ""
"`firm_ids` (`Union[int, List[int]]`): A single ID or a list of IDs for "
"the firms to be removed."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:364
msgid "Remove one or more governments from the system."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:367
msgid ""
"`government_ids` (`Union[int, List[int]]`): A single ID or a list of IDs "
"for the governments to be removed."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:373
msgid "Remove one or more nbs from the system."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:376
msgid ""
"`nbs_id` (`Union[int, List[int]]`): A single ID or a list of IDs for the "
"NBS to be removed."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:382
msgid "Save the current state of all economy entities to a specified file."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:385
msgid ""
"`file_path` (`str`): The path to the file where the economy entities will"
" be saved."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:388
msgid ""
"`Tuple[list[int], list[int], list[int], list[int], list[int]]`: A tuple "
"containing lists of agent IDs and organization IDs that were saved."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:391
msgid "Load the state of economy entities from a specified file."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:394
msgid ""
"`file_path` (`str`): The path to the file from which the economy entities"
" will be loaded."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:397
msgid ""
"`Tuple[list[int], list[int], list[int], list[int], list[int]]`: A tuple "
"containing lists of agent IDs and organization IDs that were loaded."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:400
msgid "Get the IDs of bank entities."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:403
msgid "`List[int]`: A list of bank IDs."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:409
msgid "Get the IDs of NBS entities."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:412
msgid "`List[int]`: A list of NBS IDs."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:418
msgid "Get the IDs of government entities."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:421
msgid "`List[int]`: A list of government IDs."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:427
msgid "Get the IDs of firm entities."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:430
msgid "`List[int]`: A list of firm IDs."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:436
msgid "Incrementally update a bank's properties."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:439
msgid "`bank_id` (`int`): The ID of the bank to update."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:440
msgid ""
"`delta_interest_rate` (`float`, optional): Change in interest rate, can "
"be positive or negative. Defaults to 0.0."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:441
msgid ""
"`delta_currency` (`float`, optional): Change in currency amount, can be "
"positive or negative. Defaults to 0.00."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:442
msgid ""
"`add_citizen_ids` (`list[int]`, optional): List of citizen IDs to add to "
"the bank. Defaults to empty list."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:443
msgid ""
"`remove_citizen_ids` (`list[int]`, optional): List of citizen IDs to "
"remove from the bank. Defaults to empty list."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:445
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:463
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:464
msgid "**Returns**:   This method does not return any value."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:449
msgid ""
"This method sends a request to the economy service via gRPC to "
"incrementally update a bank's properties."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:450
msgid ""
"Can update interest rate, currency amount, and associated citizens "
"simultaneously."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:451
msgid ""
"All parameters are optional except bank_id - only provide values for "
"properties you want to change."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:445
msgid ""
"Incrementally update a National Bureau of Statistics (NBS) entity's "
"properties."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:448
msgid "`nbs_id` (`int`): The ID of the NBS entity to update."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:449
msgid ""
"`delta_nominal_gdp` (`dict[str,float]`): Changes to nominal GDP metrics "
"by category."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:450
msgid ""
"`delta_real_gdp` (`dict[str,float]`): Changes to real GDP metrics by "
"category."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:451
msgid ""
"`delta_unemployment` (`dict[str,float]`): Changes to unemployment metrics"
" by category."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:452
msgid "`delta_wages` (`dict[str,float]`): Changes to wage metrics by category."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:453
msgid "`delta_prices` (`dict[str,float]`): Changes to price metrics by category."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:454
msgid ""
"`delta_working_hours` (`dict[str,float]`): Changes to working hours "
"metrics by category."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:455
msgid ""
"`delta_depression` (`dict[str,float]`): Changes to depression metrics by "
"category."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:456
msgid ""
"`delta_consumption_currency` (`dict[str,float]`): Changes to consumption "
"currency metrics by category."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:457
msgid ""
"`delta_income_currency` (`dict[str,float]`): Changes to income currency "
"metrics by category."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:458
msgid ""
"`delta_locus_control` (`dict[str,float]`): Changes to locus of control "
"metrics by category."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:459
#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:460
msgid ""
"`delta_currency` (`float`): Change in currency amount, can be positive or"
" negative."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:460
msgid ""
"`add_citizen_ids` (`list[int]`): List of citizen IDs to add to the NBS "
"entity."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:461
msgid ""
"`remove_citizen_ids` (`list[int]`): List of citizen IDs to remove from "
"the NBS entity."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:467
msgid ""
"This method sends a request to the economy service via gRPC to "
"incrementally update an NBS entity's properties."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:468
msgid ""
"Each delta parameter represents changes to be applied to the "
"corresponding statistic tracked by the NBS."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:469
msgid ""
"Dictionary parameters contain category-specific changes where keys are "
"categories and values are the delta amounts."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:470
msgid ""
"Can update multiple statistical metrics and associated citizens "
"simultaneously."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:454
msgid "Incrementally update a Government entity's properties."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:457
msgid "`government_id` (`int`): The ID of the Government entity to update."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:458
msgid ""
"`delta_bracket_cutoffs` (`list[float]`): Changes to tax bracket cutoff "
"values."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:459
msgid "`delta_bracket_rates` (`list[float]`): Changes to tax bracket rate values."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:461
msgid ""
"`add_citizen_ids` (`list[int]`): List of citizen IDs to add to the "
"Government entity."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:462
msgid ""
"`remove_citizen_ids` (`list[int]`): List of citizen IDs to remove from "
"the Government entity."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:468
msgid ""
"This method sends a request to the economy service via gRPC to "
"incrementally update a Government entity's properties."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:469
msgid ""
"Can update tax bracket information, currency amount, and associated "
"citizens simultaneously."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:470
msgid ""
"The delta parameters represent changes to be applied to the corresponding"
" values currently stored in the Government entity."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:463
msgid "Incrementally update one or more firms' properties."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:465
msgid ""
"Args:     firm_id: Single firm ID or list of firm IDs     delta_price: "
"Change in price(s)     delta_inventory: Change in inventory level(s)     "
"delta_demand: Change in demand level(s)     delta_sales: Change in sales "
"amount(s)     delta_currency: Change in currency amount(s)     "
"add_employee_ids: Employee IDs to add (single list or list of lists)     "
"remove_employee_ids: Employee IDs to remove (single list or list of "
"lists)"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:472
msgid "Update agent attributes with delta values."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/environment/economy/econ_client.py:480
msgid "Helper method to prepare parameters for batch processing."
msgstr ""

