# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, FIBLAB
# This file is distributed under the same license as the AgentSociety
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AgentSociety 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-05 00:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../apidocs/agentsociety/agentsociety.agent.prompt.md:1
#, python-brace-format
msgid "{py:mod}`agentsociety.agent.prompt`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.prompt.md:10
msgid "Module Contents"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.prompt.md:12
msgid "Classes"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.prompt.md:18
#, python-brace-format
msgid "{py:obj}`FormatPrompt <agentsociety.agent.prompt.FormatPrompt>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:20
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:31
msgid ""
"A class to handle the formatting of prompts based on a template, with "
"support for system prompts and variable extraction."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.prompt.md:24
msgid "API"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:34
msgid "**Attributes**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:35
msgid "`template` (str): The template string containing placeholders."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:36
msgid ""
"`system_prompt` (Optional[str]): An optional system prompt to add to the "
"dialog."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:37
msgid ""
"`variables` (List[str]): A list of variable names extracted from the "
"template."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:38
msgid ""
"`formatted_string` (str): The formatted string derived from the template "
"and provided variables."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:39
msgid ""
"`bound_objects` (Dict[str, Any]): Dictionary of objects bound to the "
"prompt for use in expressions."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.prompt.md:33
msgid "Initialization"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:37
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:44
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:52
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:61
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:70
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:78
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:86
msgid "**Description**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:38
msgid ""
"Initializes the FormatPrompt with a template, an optional system prompt, "
"and bound objects."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:40
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:58
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:68
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:78
msgid "**Args**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:41
msgid "`template` (str): The string template with variable placeholders."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:42
msgid ""
"`system_prompt` (Optional[str], optional): An optional system prompt. "
"Defaults to None."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:43
msgid ""
"`**bound_objects`: Named objects to bind to the prompt for use in "
"expressions."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:45
msgid ""
"Extracts variable names from the template string using regular "
"expressions."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:46
#, python-brace-format
msgid "Looks for simple variables in the format {variable_name}."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:48
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:61
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:72
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:81
#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:82
msgid "**Returns**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:49
msgid "`List[str]`: A list of variable names found within the template."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:53
msgid "Checks if an expression is safe to evaluate."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:54
msgid "Only allows attribute access and dictionary access."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:55
msgid "Supports both single and double quotes for dictionary keys."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:56
msgid "Supports numeric index access."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:59
msgid "`expr` (str): The expression to check."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:62
msgid "`bool`: True if the expression is safe, False otherwise."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:62
msgid "Evaluates expressions using eval with safety checks."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:63
msgid "Supports expressions like profile.xxx, status.xxx, context.xxx"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:64
msgid "Also supports square bracket notation like profile.xxx[\"yyy\"]"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:65
msgid "For profile and status, uses async get method from memory"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:66
msgid "Supports nested dictionary access with square brackets"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:69
msgid "`expr` (str): The expression to evaluate."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:70
msgid "`context` (dict): The evaluation context."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:73
msgid "`Any`: The result of the expression evaluation."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:71
msgid ""
"Formats the template string using the provided context and keyword "
"arguments."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:72
#, python-brace-format
msgid "Supports simple variables {var} for direct substitution."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:73
#, python-brace-format
msgid "Supports complex expressions ${expression} in three formats:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:74
#, python-brace-format
msgid "${profile.xxx}: Retrieves values from memory.profile"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:75
#, python-brace-format
msgid "${status.xxx}: Retrieves values from memory.status"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:76
#, python-brace-format
msgid "${context.xxx}: Retrieves values from the provided context dictionary"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:79
msgid "`context` (Optional[dict]): Dictionary containing context values."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:80
msgid ""
"`**kwargs`: Variable names and their corresponding values to format the "
"template."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:83
msgid "`str`: The formatted string."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:85
msgid "**Raises**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:86
msgid ""
"`KeyError`: If a placeholder in the template does not have a "
"corresponding key in kwargs."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:87
msgid "`ValueError`: If an expression has an invalid format."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:79
msgid ""
"Converts the formatted prompt and optional system prompt into a dialog "
"format suitable for chat systems."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:82
msgid ""
"`List[Dict[str, str]]`: A list representing the dialog with roles and "
"content."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/prompt.py:87
msgid ""
"Logs the details of the FormatPrompt instance, including the template, "
"system prompt, extracted variables, and formatted string."
msgstr ""

