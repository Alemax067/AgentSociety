# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, FIBLAB
# This file is distributed under the same license as the AgentSociety
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AgentSociety 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-05 00:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:1
#, python-brace-format
msgid "{py:mod}`agentsociety.agent.agent_base`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:10
msgid "Module Contents"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:12
msgid "Classes"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:18
#, python-brace-format
msgid "{py:obj}`AgentParams <agentsociety.agent.agent_base.AgentParams>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:20
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:79
msgid "Agent parameters"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:22
#, python-brace-format
msgid "{py:obj}`GatherQuery <agentsociety.agent.agent_base.GatherQuery>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:24
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:95
msgid "A model for gather query"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:26
#, python-brace-format
msgid "{py:obj}`AgentType <agentsociety.agent.agent_base.AgentType>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:28
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:155
msgid "Agent Type"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:30
#, python-brace-format
msgid "{py:obj}`Agent <agentsociety.agent.agent_base.Agent>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:32
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:228
msgid "Agent base class"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:36
msgid "Functions"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:42
#, python-brace-format
msgid "{py:obj}`extract_json <agentsociety.agent.agent_base.extract_json>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:44
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:218
msgid "Extract JSON substring from a raw string response."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:48
msgid "Data"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:54
#, python-brace-format
msgid "{py:obj}`__all__ <agentsociety.agent.agent_base.__all__>`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:60
msgid "API"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:66
msgid "['Agent', 'AgentType', 'AgentParams', 'GatherQuery']"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:76
#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:92
#, python-brace-format
msgid "Bases: {py:obj}`pydantic.BaseModel`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:81
#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:97
#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:157
#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:230
msgid "Initialization"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:85
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:101
msgid ""
"Create a new model by parsing and validating input data from keyword "
"arguments."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:87
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:103
msgid ""
"Raises [`ValidationError`][pydantic_core.ValidationError] if the input "
"data cannot be validated to form a valid model."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:90
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:106
msgid "`self` is explicitly positional-only to allow `self` as a field name."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:108
#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:119
#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:241
#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:252
#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:263
msgid "None"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:130
#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:141
msgid "True"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:152
#, python-brace-format
msgid "Bases: {py:obj}`enum.Enum`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:157
msgid "Citizen, Citizen type agent"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:158
msgid "Institution, Organization or institution type agent"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:167
msgid "'Unspecified'"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:177
msgid "'Citizen'"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:187
msgid "'Institution'"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:197
msgid "'Supervisor'"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:207
msgid "'Individual'"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:220
msgid "Args:     output_str: Raw string output that may contain JSON data."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:223
msgid "Returns:     Extracted JSON string if valid, otherwise None."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:226
#, python-brace-format
msgid ""
"Note:     Searches for the first '{' and last '}' to isolate JSON "
"content.     Catches JSON decoding errors and logs warnings."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:225
#, python-brace-format
msgid "Bases: {py:obj}`abc.ABC`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:234
msgid "Initialize the `Agent`."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:236
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:422
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:431
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:464
msgid "**Args**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:237
msgid "`id` (`int`): The ID of the agent."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:238
msgid "`name` (`str`): The name of the agent."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:239
msgid ""
"`type` (`AgentType`): The type of the agent. Defaults to "
"`AgentType.Unspecified`."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:240
msgid "`toolbox` (`AgentToolbox`): The toolbox of the agent."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:241
msgid "`memory` (`Memory`): The memory of the agent."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.agent.agent_base.md:274
msgid "[]"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:336
msgid "The Agent's Simulator ID"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:344
msgid "The Agent's Toolbox"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:352
msgid "The Agent's LLM"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:360
msgid "The Agent's Environment"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:368
msgid "The Agent's Messager"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:376
msgid "The Agent's Database Writer"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:384
msgid "The Agent's Memory"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:392
msgid "The Agent's Status Memory"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:400
msgid "The Agent's Stream Memory"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:410
msgid "Reset the agent."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:420
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:426
msgid "React to an intervention."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:423
msgid "`intervention_message` (`str`): The message of the intervention."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:425
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:439
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:468
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:486
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:546
msgid "**Description**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:429
msgid "Send a social or economy message to another agent."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:432
msgid "`to_agent_id` (`int`): The ID of the recipient agent."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:433
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:466
msgid "`content` (`str`): The content of the message to send."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:434
msgid ""
"`type` (`str`, optional): The type of the message (\"social\" or "
"\"economy\"). Defaults to \"social\"."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:436
#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:483
msgid "**Raises**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:437
msgid "`RuntimeError`: If the Messager is not set."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:440
msgid "Validates the message type and logs a warning if it's invalid."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:441
msgid ""
"Prepares the message payload with necessary metadata such as sender ID, "
"timestamp, etc."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:442
msgid "Sends the message asynchronously using `_send_message`."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:443
msgid ""
"Optionally records the message in Database if it's a \"social\" type "
"message."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:462
msgid "Register a message to target aoi"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:465
msgid "`target_aoi` (`Union[int, list[int]]`): The ID of the target aoi."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:469
msgid "Register a message to target aoi."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:471
msgid "Cancel a message to target aoi"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:481
msgid "Define the behavior logic of the agent."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:484
msgid "`NotImplementedError`: As this method must be implemented by subclasses."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:487
msgid ""
"This abstract method should contain the core logic for what the agent "
"does at each step of its operation."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:488
msgid ""
"It is intended to be overridden by subclasses to define specific "
"behaviors."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:490
msgid "Status summary"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:499
msgid "Execute when the agent is deleted or the simulation is finished."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:508
msgid "Before forward"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:517
msgid "After forward"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:526
msgid "Before blocks"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:535
msgid "After blocks"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:544
msgid "Unified entry point for executing the agent's logic."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:547
msgid "It calls the `forward` method to execute the agent's behavior logic."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/agent/agent_base.py:548
msgid ""
"Acts as the main control flow for the agent, coordinating when and how "
"the agent performs its actions."
msgstr ""

