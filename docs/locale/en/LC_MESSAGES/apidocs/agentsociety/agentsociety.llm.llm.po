# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, FIBLAB
# This file is distributed under the same license as the AgentSociety
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AgentSociety 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-05 00:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:1
#, python-brace-format
msgid "{py:mod}`agentsociety.llm.llm`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:10
msgid "Module Contents"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:12
msgid "Classes"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:18
#, python-brace-format
msgid "{py:obj}`LLMProviderType <agentsociety.llm.llm.LLMProviderType>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:20
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:81
msgid "Defines the types of LLM providers."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:22
#, python-brace-format
msgid "{py:obj}`LLMConfig <agentsociety.llm.llm.LLMConfig>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:24
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:167
msgid "LLM configuration class."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:26
#, python-brace-format
msgid "{py:obj}`LLMActor <agentsociety.llm.llm.LLMActor>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:28
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:263
msgid "Actor class for LLM operations."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:30
#, python-brace-format
msgid "{py:obj}`LLM <agentsociety.llm.llm.LLM>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:32
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:286
msgid "Main class for the Large Language Model (LLM) object used by Agent(Soul)."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:36
msgid "Data"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:42
#, python-brace-format
msgid "{py:obj}`__all__ <agentsociety.llm.llm.__all__>`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:46
#, python-brace-format
msgid "{py:obj}`MAX_TIMEOUT <agentsociety.llm.llm.MAX_TIMEOUT>`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:52
msgid "API"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:58
msgid "['LLM', 'LLMConfig', 'LLMProviderType']"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:68
msgid "60"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:78
#, python-brace-format
msgid "Bases: {py:obj}`str`, {py:obj}`enum.Enum`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:82
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:279
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:288
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:326
msgid "**Description**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:83
msgid "Enumerates different types of LLM providers."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:85
msgid "**Types**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:86
msgid "`OPENAI`: OpenAI and compatible providers (based on base_url)."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:87
msgid "`DEEPSEEK`: DeepSeek."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:88
msgid "`QWEN`: Qwen."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:89
msgid "`ZHIPU`: Zhipu."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:90
msgid "`SILICONFLOW`: SiliconFlow."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:91
msgid "`VLLM`: VLLM."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:83
#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:169
#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:265
#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:288
msgid "Initialization"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:87
msgid "Initialize self.  See help(type(self)) for accurate signature."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:93
msgid "'openai'"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:103
msgid "'deepseek'"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:113
msgid "'qwen'"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:123
msgid "'zhipuai'"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:133
msgid "'siliconflow'"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:143
msgid "'volcengine'"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:153
msgid "'vllm'"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:164
#, python-brace-format
msgid "Bases: {py:obj}`pydantic.BaseModel`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:173
msgid ""
"Create a new model by parsing and validating input data from keyword "
"arguments."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:175
msgid ""
"Raises [`ValidationError`][pydantic_core.ValidationError] if the input "
"data cannot be validated to form a valid model."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:178
msgid "`self` is explicitly positional-only to allow `self` as a field name."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:180
#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:191
#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:202
#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:213
#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:224
#: ../../apidocs/agentsociety/agentsociety.llm.llm.md:235
msgid "'Field(...)'"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:183
msgid "The type of the LLM provider"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:194
msgid "The base URL for the LLM provider"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:205
msgid "API key for accessing the LLM provider"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:216
msgid "The model to use"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:227
msgid "Concurrency value for LLM operations to avoid rate limit"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:238
msgid "Timeout for LLM operations in seconds"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:277
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:324
msgid "Sends an asynchronous text request to the configured LLM API."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:280
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:327
msgid ""
"Attempts to send a text request up to `retries` times with exponential "
"backoff on failure."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:281
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:328
msgid "Handles different request types and manages token usage statistics."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:283
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:330
msgid "**Args**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:284
msgid "`config`: LLM configuration."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:285
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:331
msgid "`dialog`: Messages to send as part of the chat completion request."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:286
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:332
msgid "`response_format`: JSON schema for the response. Default is NOT_GIVEN."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:287
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:333
msgid "`temperature`: Controls randomness in the model's output. Default is 1."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:288
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:334
msgid ""
"`max_tokens`: Maximum number of tokens to generate in the response. "
"Default is None."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:289
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:335
msgid ""
"`top_p`: Limits the next token selection to a subset of tokens with a "
"cumulative probability above this value. Default is None."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:290
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:336
msgid ""
"`frequency_penalty`: Penalizes new tokens based on their existing "
"frequency in the text so far. Default is None."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:291
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:337
msgid ""
"`presence_penalty`: Penalizes new tokens based on whether they appear in "
"the text so far. Default is None."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:292
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:338
msgid "`timeout`: Request timeout in seconds. Default is 300 seconds."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:293
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:339
msgid "`retries`: Number of retry attempts in case of failure. Default is 10."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:294
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:340
msgid ""
"`tools`: List of dictionaries describing the tools that can be called by "
"the model. Default is NOT_GIVEN."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:295
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:341
msgid ""
"`tool_choice`: Dictionary specifying how the model should choose from the"
" provided tools. Default is NOT_GIVEN."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:297
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:343
msgid "**Returns**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:298
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:344
msgid ""
"A string containing the message content or a dictionary with tool call "
"arguments if tools are used."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:299
#: ../../../packages/agentsociety/agentsociety/llm/llm.py:345
msgid "Raises exceptions if the request fails after all retry attempts."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:289
msgid ""
"This class manages configurations and interactions with different large "
"language model APIs."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:290
msgid ""
"It initializes clients based on the specified request type and handles "
"token usage and consumption reporting."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:292
msgid "Initializes the LLM instance."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:294
msgid "**Parameters**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:295
msgid ""
"`configs`: An instance of `LLMConfig` containing configuration settings "
"for the LLM."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/llm/llm.py:296
msgid ""
"`num_actors` (`int`): Number of actor instances to create for parallel "
"processing. Defaults to min(cpu_count(), 8)."
msgstr ""

