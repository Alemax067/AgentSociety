# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, FIBLAB
# This file is distributed under the same license as the AgentSociety
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AgentSociety 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-05 00:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:1
#, python-brace-format
msgid "{py:mod}`agentsociety.storage.database`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:10
msgid "Module Contents"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:12
msgid "Classes"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:18
#, python-brace-format
msgid "{py:obj}`DatabaseConfig <agentsociety.storage.database.DatabaseConfig>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:20
#: ../../../packages/agentsociety/agentsociety/storage/database.py:75
msgid "Database configuration class supporting multiple database types."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:22
#, python-brace-format
msgid "{py:obj}`DatabaseWriter <agentsociety.storage.database.DatabaseWriter>`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:28
msgid "Functions"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:34
#, python-brace-format
msgid ""
"{py:obj}`_create_async_engine_from_config "
"<agentsociety.storage.database._create_async_engine_from_config>`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:38
#, python-brace-format
msgid "{py:obj}`_create_tables <agentsociety.storage.database._create_tables>`"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:40
#: ../../../packages/agentsociety/agentsociety/storage/database.py:145
msgid "Create tables using SQLAlchemy"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:44
msgid "Data"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:50
#, python-brace-format
msgid "{py:obj}`__all__ <agentsociety.storage.database.__all__>`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:56
msgid "API"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:62
msgid "['DatabaseWriter', 'DatabaseConfig']"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:72
#, python-brace-format
msgid "Bases: {py:obj}`pydantic.BaseModel`"
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:77
#: ../../apidocs/agentsociety/agentsociety.storage.database.md:155
msgid "Initialization"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:81
msgid ""
"Create a new model by parsing and validating input data from keyword "
"arguments."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:83
msgid ""
"Raises [`ValidationError`][pydantic_core.ValidationError] if the input "
"data cannot be validated to form a valid model."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:86
msgid "`self` is explicitly positional-only to allow `self` as a field name."
msgstr ""

#: ../../apidocs/agentsociety/agentsociety.storage.database.md:88
#: ../../apidocs/agentsociety/agentsociety.storage.database.md:99
#: ../../apidocs/agentsociety/agentsociety.storage.database.md:110
msgid "'Field(...)'"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:91
msgid "Whether database storage is enabled"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:102
msgid "Database type"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:113
msgid "Database connection string (PostgreSQL)"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:129
msgid "Create async SQLAlchemy engine based on configuration"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:159
msgid "Initialize database writer."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:161
#: ../../../packages/agentsociety/agentsociety/storage/database.py:219
#: ../../../packages/agentsociety/agentsociety/storage/database.py:228
#: ../../../packages/agentsociety/agentsociety/storage/database.py:237
#: ../../../packages/agentsociety/agentsociety/storage/database.py:255
#: ../../../packages/agentsociety/agentsociety/storage/database.py:264
#: ../../../packages/agentsociety/agentsociety/storage/database.py:273
#: ../../../packages/agentsociety/agentsociety/storage/database.py:372
#: ../../../packages/agentsociety/agentsociety/storage/database.py:390
msgid "**Args**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:162
msgid "`tenant_id` (str): Tenant ID."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:163
msgid "`exp_id` (str): Experiment ID."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:164
msgid "`config` (DatabaseConfig): Database configuration."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:165
msgid ""
"`home_dir` (str): Home directory. sqlite will be stored in "
"home_dir/sqlite.db"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:167
msgid "Initialize database tables"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:175
msgid "Initialize table object cache"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:184
msgid "Create tables"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:192
msgid "Get insert function based on database type"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:200
msgid "Experiment info file path"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:208
msgid "Storage path"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:217
msgid "Read dialog records with filtering and pagination."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:220
#: ../../../packages/agentsociety/agentsociety/storage/database.py:229
#: ../../../packages/agentsociety/agentsociety/storage/database.py:238
#: ../../../packages/agentsociety/agentsociety/storage/database.py:256
msgid "`day` (Optional[int]): Filter by day."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:221
msgid "`speaker` (Optional[str]): Filter by speaker."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:222
msgid "`dialog_type` (Optional[int]): Filter by dialog type."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:223
#: ../../../packages/agentsociety/agentsociety/storage/database.py:231
#: ../../../packages/agentsociety/agentsociety/storage/database.py:240
#: ../../../packages/agentsociety/agentsociety/storage/database.py:257
msgid "`start_t` (Optional[float]): Filter by start time."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:224
#: ../../../packages/agentsociety/agentsociety/storage/database.py:232
#: ../../../packages/agentsociety/agentsociety/storage/database.py:241
#: ../../../packages/agentsociety/agentsociety/storage/database.py:258
msgid "`end_t` (Optional[float]): Filter by end time."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:225
#: ../../../packages/agentsociety/agentsociety/storage/database.py:234
#: ../../../packages/agentsociety/agentsociety/storage/database.py:242
#: ../../../packages/agentsociety/agentsociety/storage/database.py:259
#: ../../../packages/agentsociety/agentsociety/storage/database.py:266
#: ../../../packages/agentsociety/agentsociety/storage/database.py:278
msgid "`limit` (Optional[int]): Limit number of records."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:226
#: ../../../packages/agentsociety/agentsociety/storage/database.py:235
#: ../../../packages/agentsociety/agentsociety/storage/database.py:243
#: ../../../packages/agentsociety/agentsociety/storage/database.py:260
#: ../../../packages/agentsociety/agentsociety/storage/database.py:267
#: ../../../packages/agentsociety/agentsociety/storage/database.py:279
msgid "`offset` (Optional[int]): Offset for pagination."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:227
#: ../../../packages/agentsociety/agentsociety/storage/database.py:236
#: ../../../packages/agentsociety/agentsociety/storage/database.py:244
#: ../../../packages/agentsociety/agentsociety/storage/database.py:261
#: ../../../packages/agentsociety/agentsociety/storage/database.py:268
#: ../../../packages/agentsociety/agentsociety/storage/database.py:280
msgid "`order_by` (str): Column to order by."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:228
#: ../../../packages/agentsociety/agentsociety/storage/database.py:237
#: ../../../packages/agentsociety/agentsociety/storage/database.py:245
#: ../../../packages/agentsociety/agentsociety/storage/database.py:262
#: ../../../packages/agentsociety/agentsociety/storage/database.py:269
#: ../../../packages/agentsociety/agentsociety/storage/database.py:281
msgid "`order_direction` (str): Order direction ('asc' or 'desc')."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:230
#: ../../../packages/agentsociety/agentsociety/storage/database.py:239
#: ../../../packages/agentsociety/agentsociety/storage/database.py:246
#: ../../../packages/agentsociety/agentsociety/storage/database.py:247
#: ../../../packages/agentsociety/agentsociety/storage/database.py:264
#: ../../../packages/agentsociety/agentsociety/storage/database.py:271
#: ../../../packages/agentsociety/agentsociety/storage/database.py:282
#: ../../../packages/agentsociety/agentsociety/storage/database.py:283
#: ../../../packages/agentsociety/agentsociety/storage/database.py:363
#: ../../../packages/agentsociety/agentsociety/storage/database.py:381
msgid "**Returns**:"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:231
msgid "`List[Dict[str, Any]]`: List of dialog records."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:226
msgid "Read status records with filtering and pagination."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:230
#: ../../../packages/agentsociety/agentsociety/storage/database.py:265
msgid "`agent_id` (Optional[int]): Filter by agent ID."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:233
msgid "`action` (Optional[str]): Filter by action."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:240
msgid "`List[Dict[str, Any]]`: List of status records."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:235
msgid "Read survey records with filtering and pagination."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:239
msgid "`survey_id` (Optional[str]): Filter by survey ID."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:248
msgid "`List[Dict[str, Any]]`: List of survey records."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:244
msgid "Read all agent profiles."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:247
msgid "`List[Dict[str, Any]]`: List of agent profile records."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:253
msgid "Read global prompt records with filtering and pagination."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:265
msgid "`List[Dict[str, Any]]`: List of global prompt records."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:262
msgid "Read task result records with filtering and pagination."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:272
msgid "`List[Dict[str, Any]]`: List of task result records."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:271
msgid "Read metric records with filtering and pagination."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:274
msgid "`key` (Optional[str]): Filter by metric key."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:275
msgid "`step` (Optional[int]): Filter by specific step."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:276
msgid "`start_step` (Optional[int]): Filter by start step."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:277
msgid "`end_step` (Optional[int]): Filter by end step."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:284
msgid "`List[Dict[str, Any]]`: List of metric records."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:280
msgid "Get comprehensive statistics for the experiment."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:283
msgid "`Dict[str, Any]`: Statistics including counts, time ranges, and summaries."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:343
msgid "Batch insert metric data."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:345
msgid "Args:     metrics: List of tuples (key, value, step)"
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:361
msgid "Fetch all unprocessed pending dialogs from the database."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:364
msgid "`list[StoragePendingDialog]`: List of pending dialogs."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:370
msgid "Mark specified dialogs as processed."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:373
msgid ""
"`pending_ids` (list[int]): List of pending dialog IDs to mark as "
"processed."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:379
msgid "Fetch all unprocessed pending surveys from the database."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:382
msgid "`list[StoragePendingSurvey]`: List of pending surveys."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:388
msgid "Mark specified surveys as processed."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:391
msgid ""
"`pending_ids` (list[int]): List of pending survey IDs to mark as "
"processed."
msgstr ""

#: ../../../packages/agentsociety/agentsociety/storage/database.py:397
msgid "Close database connection"
msgstr ""

